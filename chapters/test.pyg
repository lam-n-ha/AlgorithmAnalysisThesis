  m,L = 1,10                                   # parameters
  α = 2/(L+m)                                  # stepsize

  @algorithm begin
    f = DifferentiableFunctional{Rⁿ}()       # objective function
    xs = first_order_stationary_point(f)     # first-order stationary point
    f' ∈ SectorBounded(m, L, xs, f'(xs))     # function class
    x0 = Rⁿ()                                # initial point
    x1 = x0 - α*f'(x0)                       # gradient descent
    x0 => x1                                 # state update
    performance = (x1-xs)^2                  # performance measure
  end

  rate(performance)                            # automated algorithm analysis
